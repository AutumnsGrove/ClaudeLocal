// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Project {
  id           String         @id @default(uuid())
  name         String
  description  String?
  instructions String?        // Custom instructions for this project
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  conversations Conversation[]
  files        ProjectFile[]
}

model Conversation {
  id        String    @id @default(uuid())
  title     String
  projectId String?
  project   Project?  @relation(fields: [projectId], references: [id], onDelete: SetNull)
  model     String    // e.g., "claude-3-5-sonnet-20241022"
  temperature Float   @default(1.0)
  maxTokens   Int     @default(4096)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  messages  Message[]
  archived  Boolean   @default(false)

  @@index([projectId])
  @@index([createdAt])
}

model Message {
  id             String       @id @default(uuid())
  conversationId String
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  role           String       // "user" or "assistant"
  content        String       // Stored as text
  createdAt      DateTime     @default(now())
  attachments    Attachment[]

  @@index([conversationId])
  @@index([createdAt])
}

model Attachment {
  id        String   @id @default(uuid())
  messageId String
  message   Message  @relation(fields: [messageId], references: [id], onDelete: Cascade)
  fileName  String
  fileType  String   // MIME type
  filePath  String   // Path relative to uploads directory
  fileSize  Int      // Size in bytes
  createdAt DateTime @default(now())

  @@index([messageId])
}

model ProjectFile {
  id        String   @id @default(uuid())
  projectId String
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  fileName  String
  fileType  String   // MIME type
  filePath  String   // Path relative to uploads directory
  fileSize  Int      // Size in bytes
  content   String?  // Extracted text content for context
  createdAt DateTime @default(now())

  @@index([projectId])
}
